https://www.hackerrank.com/challenges/interviews/problem




/*Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are 0. Note: A specific contest can be used to screen candidates at more than one college, but each college only holds 1 screening contest.
1. Contests: |contest_id | hacker_id | name
2. Colleges: |college_id | contest_id
3. Challenges: |challenge_id | college_id 
4. View_Stats: |challenge_id | total_views | total_unique_views
5. Submission_Stats: |challenge_id | total_submissions | total_accepted_submissions */

SELECT con.contest_id, con.hacker_id, con.name, 
SUM(sg.total_submissions), SUM(sg.total_accepted_submissions), 
SUM(vg.total_views), SUM(vg.total_unique_views)
FROM Contests AS con
JOIN Colleges AS col ON con.contest_id = col.contest_id
JOIN Challenges AS cha ON cha.college_id = col.college_id
LEFT JOIN  
(SELECT ss.challenge_id, SUM(ss.total_submissions) AS total_submissions, SUM(ss.total_accepted_submissions) AS total_accepted_submissions FROM Submission_Stats AS ss GROUP BY ss.challenge_id) AS sg
ON cha.challenge_id = sg.challenge_id
LEFT JOIN
(SELECT vs.challenge_id, SUM(vs.total_views) AS total_views, SUM(vs.total_unique_views) AS total_unique_views
FROM View_Stats AS vs GROUP BY vs.challenge_id) AS vg
ON cha.challenge_id = vg.challenge_id
GROUP BY con.contest_id, con.hacker_id, con.name       /*group by contest_id, hacker_id, name to get sum of total_submissions, total_accepted_submissions, total_views and total_unique_views for each contest*/
HAVING SUM(sg.total_submissions) +
       SUM(sg.total_accepted_submissions) +
       SUM(vg.total_views) +
       SUM(vg.total_unique_views) > 0
ORDER BY con.contest_id;

/*use LEFT JOIN for tables View_Stats and Submission_Stats, becaause these two tables may not contain all challenge_id as in tables Contests, Colleges, and Challenges. */
